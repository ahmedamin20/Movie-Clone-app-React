[{"C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\index.js":"1","C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\App.js":"2","C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\Components\\Header\\Header.jsx":"3","C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\Components\\card\\card.jsx":"4","C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\Components\\movieList\\movieList.jsx":"5","C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\pages\\home\\home.jsx":"6","C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\pages\\movieDetail\\movie.jsx":"7"},{"size":210,"mtime":1669146807352,"results":"8","hashOfConfig":"9"},{"size":798,"mtime":1669456385312,"results":"10","hashOfConfig":"9"},{"size":860,"mtime":1669149989131,"results":"11","hashOfConfig":"9"},{"size":1864,"mtime":1669456965442,"results":"12","hashOfConfig":"9"},{"size":980,"mtime":1669162738574,"results":"13","hashOfConfig":"9"},{"size":2128,"mtime":1669456619836,"results":"14","hashOfConfig":"9"},{"size":4848,"mtime":1669379635056,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"124c8jm",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"19"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"40"},"C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\index.js",[],[],[],"C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\App.js",[],[],"C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\Components\\Header\\Header.jsx",["41"],[],"import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"headerLeft\">\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"header__icon\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/2560px-IMDB_Logo_2016.svg.png\"\r\n          />\r\n        </Link>\r\n        <Link to=\"/movies/popular\" style={{ textDecoration: \"none\" }}>\r\n          <span>Popular</span>\r\n        </Link>\r\n        <Link to=\"/movies/top_rated\" style={{ textDecoration: \"none\" }}>\r\n          <span> Top Rated</span>\r\n        </Link>\r\n        <Link to=\"/movies/upcoming\" style={{ textDecoration: \"none\" }}>\r\n          <span>Upcoming</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\Components\\card\\card.jsx",["42"],[],"C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\Components\\movieList\\movieList.jsx",["43","44"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Card from \"../card/card\";\r\nimport \"./movieList.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst MovieList = () => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const { type } = useParams();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [type]);\r\n\r\n  const getData = () => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${\r\n        type ? type : \"popular\"\r\n      }?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => setMovieList(data.results));\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie__list\">\r\n      <h2 className=\"list__title\">{(type ? type : \"POPULAR\").toUpperCase()}</h2>\r\n      <div className=\"list__cards\">\r\n        {movieList.map((movie) => (\r\n          <Card movie={movie} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\pages\\home\\home.jsx",[],[],"C:\\Users\\Eng.Ahmed\\Desktop\\movieApp\\movie-clone-app\\src\\pages\\movieDetail\\movie.jsx",["45","46","47","48","49","50"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./movie.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst Movie = () => {\r\n  const [currentMovieDetail, setMovie] = useState();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    getData();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  const getData = () => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => setMovie(data));\r\n  };\r\n  return (\r\n    <div className=\"movie\">\r\n      <div className=\"movie__intro\">\r\n        <img\r\n          className=\"movie__backdrop\"\r\n          src={`https://image.tmdb.org/t/p/original${\r\n            currentMovieDetail ? currentMovieDetail.backdrop_path : \"\"\r\n          }`}\r\n        />\r\n      </div>\r\n      <div className=\"movie__detail\">\r\n        <div className=\"movie__detailLeft\">\r\n          <div className=\"movie__posterBox\">\r\n            <img\r\n              className=\"movie__poster\"\r\n              src={`https://image.tmdb.org/t/p/original${\r\n                currentMovieDetail ? currentMovieDetail.poster_path : \"\"\r\n              }`}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"movie__detailRight\">\r\n          <div className=\"movie__detailRightTop\">\r\n            <div className=\"movie__name\">\r\n              {currentMovieDetail ? currentMovieDetail.original_title : \"\"}\r\n            </div>\r\n            <div className=\"movie__tagline\">\r\n              {currentMovieDetail ? currentMovieDetail.tagline : \"\"}\r\n            </div>\r\n            <div className=\"movie__rating\">\r\n              {currentMovieDetail ? currentMovieDetail.vote_average : \"\"}{\" \"}\r\n              <i class=\"fas fa-star\" />\r\n              <span className=\"movie__voteCount\">\r\n                {currentMovieDetail\r\n                  ? \"(\" + currentMovieDetail.vote_count + \") votes\"\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"movie__runtime\">\r\n              {currentMovieDetail ? currentMovieDetail.runtime + \" mins\" : \"\"}\r\n            </div>\r\n            <div className=\"movie__releaseDate\">\r\n              {currentMovieDetail\r\n                ? \"Release date: \" + currentMovieDetail.release_date\r\n                : \"\"}\r\n            </div>\r\n            <div className=\"movie__genres\">\r\n              {currentMovieDetail && currentMovieDetail.genres\r\n                ? currentMovieDetail.genres.map((genre) => (\r\n                    <>\r\n                      <span className=\"movie__genre\" id={genre.id}>\r\n                        {genre.name}\r\n                      </span>\r\n                    </>\r\n                  ))\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"movie__detailRightBottom\">\r\n            <div className=\"synopsisText\">Synopsis</div>\r\n            <div>{currentMovieDetail ? currentMovieDetail.overview : \"\"}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"movie__links\">\r\n        <div className=\"movie__heading\">Useful Links</div>\r\n        {currentMovieDetail && currentMovieDetail.homepage && (\r\n          <a\r\n            href={currentMovieDetail.homepage}\r\n            target=\"_blank\"\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <p>\r\n              <span className=\"movie__homeButton movie__Button\">\r\n                Homepage <i className=\"newTab fas fa-external-link-alt\"></i>\r\n              </span>\r\n            </p>\r\n          </a>\r\n        )}\r\n        {currentMovieDetail && currentMovieDetail.imdb_id && (\r\n          <a\r\n            href={\"https://www.imdb.com/title/\" + currentMovieDetail.imdb_id}\r\n            target=\"_blank\"\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <p>\r\n              <span className=\"movie__imdbButton movie__Button\">\r\n                IMDb<i className=\"newTab fas fa-external-link-alt\"></i>\r\n              </span>\r\n            </p>\r\n          </a>\r\n        )}\r\n      </div>\r\n      <div className=\"movie__heading\">Production companies</div>\r\n      <div className=\"movie__production\">\r\n        {currentMovieDetail &&\r\n          currentMovieDetail.production_companies &&\r\n          currentMovieDetail.production_companies.map((company) => (\r\n            <>\r\n              {company.logo_path && (\r\n                <span className=\"productionCompanyImage\">\r\n                  <img\r\n                    className=\"movie__productionComapany\"\r\n                    src={\r\n                      \"https://image.tmdb.org/t/p/original\" + company.logo_path\r\n                    }\r\n                  />\r\n                  <span>{company.name}</span>\r\n                </span>\r\n              )}\r\n            </>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Movie;\r\n",{"ruleId":"51","severity":1,"message":"52","line":9,"column":11,"nodeType":"53","endLine":12,"endColumn":13},{"ruleId":"51","severity":1,"message":"52","line":34,"column":13,"nodeType":"53","endLine":39,"endColumn":15},{"ruleId":"54","severity":1,"message":"55","line":12,"column":6,"nodeType":"56","endLine":12,"endColumn":8,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"55","line":16,"column":6,"nodeType":"56","endLine":16,"endColumn":12,"suggestions":"58"},{"ruleId":"54","severity":1,"message":"55","line":11,"column":6,"nodeType":"56","endLine":11,"endColumn":8,"suggestions":"59"},{"ruleId":"51","severity":1,"message":"52","line":22,"column":9,"nodeType":"53","endLine":27,"endColumn":11},{"ruleId":"51","severity":1,"message":"52","line":32,"column":13,"nodeType":"53","endLine":37,"endColumn":15},{"ruleId":"60","severity":1,"message":"61","line":86,"column":11,"nodeType":"53","messageId":"62","endLine":90,"endColumn":12,"fix":"63"},{"ruleId":"60","severity":1,"message":"61","line":99,"column":11,"nodeType":"53","messageId":"62","endLine":103,"endColumn":12,"fix":"64"},{"ruleId":"51","severity":1,"message":"52","line":120,"column":19,"nodeType":"53","endLine":125,"endColumn":21},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["65"],["66"],["67"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"68","text":"69"},{"range":"70","text":"69"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"71","fix":"75"},[3321,3321]," rel=\"noreferrer\"",[3798,3798],"Update the dependencies array to be: [getData]",{"range":"76","text":"77"},"Update the dependencies array to be: [getData, type]",{"range":"78","text":"79"},{"range":"80","text":"77"},[318,320],"[getData]",[368,374],"[getData, type]",[303,305]]